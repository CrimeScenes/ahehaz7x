local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = game:GetService("Workspace").CurrentCamera
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local lastClickTime = 0
local isToggled = false
local TargetPlayer = nil
local predictionFactor = 2.5 -- Adjust for more/less prediction
local shootDelay = shared.Forbidden.TriggerBot.Settings.ResetTime * 0.5  -- Adjusted for quicker shots

-- Mouse click function
function Forlorn.mouse1click(x, y)
    VirtualInputManager:SendMouseButtonEvent(x, y, 0, true, game, false)
    VirtualInputManager:SendMouseButtonEvent(x, y, 0, false, game, false)
end

-- Get current mouse position
local function getMousePosition()
    local mouse = UserInputService:GetMouseLocation()
    return mouse.X, mouse.Y
end

-- View Era function (if the target is in the view)
local function isWithinViewEra(position)
    local screenPos = Camera:WorldToViewportPoint(position)
    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    local fovHeight = shared.Forbidden.ViewEra.Vertical * 100
    local fovWidth = shared.Forbidden.ViewEra.Horizontal * 100
    return (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude <= math.sqrt((fovHeight / 2)^2 + (fovWidth / 2)^2)
end

-- Get all body parts of the character
local function getBodyPartsPosition(character)
    local bodyParts = {}
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("MeshPart") or part:IsA("Part") then
            table.insert(bodyParts, part)
        end
    end
    return bodyParts
end

-- Sync the mouse with the target (on-screen adjustment)
local function syncBoxWithTarget(screenPos)
    local mouseX, mouseY = getMousePosition()
    VirtualInputManager:SendMouseMoveEvent(screenPos.X, screenPos.Y, game)
end

-- Check if the player is knocked down
local function isPlayerKnocked(player)
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    if humanoid then
        return humanoid.Health > 0 and humanoid.Health <= 1
    end
    return false
end

-- Ignore shooting if holding a knife or katana
local function isIgnoringKnife()
    local currentTool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
    if currentTool then
        local toolName = currentTool.Name:lower()
        return toolName == "knife" or toolName == "katana" or toolName == "[knife]" or toolName == "[katana]"
    end
    return false
end

-- Check if the mouse is currently targeting the player
local function isMouseOnTarget(targetPlayer)
    local mouse = LocalPlayer:GetMouse()
    return mouse.Target and mouse.Target:IsDescendantOf(targetPlayer.Character)
end

-- Predict the future position of the target (improved prediction)
local function predictTargetPosition(targetPlayer)
    local character = targetPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local rootPart = character.HumanoidRootPart
        local velocity = rootPart.Velocity
        local acceleration = rootPart.AssemblyLinearVelocity
        local currentPos = rootPart.Position
        -- Using more advanced prediction formula
        local predictedPos = currentPos + velocity * predictionFactor + (acceleration * predictionFactor * 0.5)
        return predictedPos
    end
    return nil
end

-- Trigger bot action with enhanced targeting
local function TriggerBotAction()
    if TargetPlayer and TargetPlayer.Character then
        local humanoid = TargetPlayer.Character:FindFirstChild("Humanoid")
        if humanoid and humanoid.Health > 0 and not isPlayerKnocked(TargetPlayer) then
            if isMouseOnTarget(TargetPlayer) then
                local bodyParts = getBodyPartsPosition(TargetPlayer.Character)
                local bestTargetPart = nil
                local bestScreenPos = nil
                local closestDist = math.huge

                -- Iterate through body parts and find the best hit part
                for _, part in pairs(bodyParts) do
                    local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                    if onScreen and isWithinViewEra(part.Position) then
                        local predictedPosition = predictTargetPosition(TargetPlayer)
                        if predictedPosition then
                            local predictedScreenPos, predictedOnScreen = Camera:WorldToViewportPoint(predictedPosition)
                            if predictedOnScreen and isWithinViewEra(predictedPosition) then
                                -- Track the closest part for more accurate shooting
                                local distance = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).Magnitude
                                if distance < closestDist then
                                    closestDist = distance
                                    bestTargetPart = part
                                    bestScreenPos = predictedScreenPos
                                end
                            end
                        end
                    end
                end

                -- Shoot when a valid target part is found
                if bestTargetPart and bestScreenPos then
                    syncBoxWithTarget(bestScreenPos)
                    if os.clock() - lastClickTime >= shootDelay then  
                        lastClickTime = os.clock()
                        local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
                        if tool and tool:IsA("Tool") then
                            if not isIgnoringKnife() then
                                local shootFunction = tool:FindFirstChild("Fire")
                                if shootFunction and shootFunction:IsA("RemoteEvent") then
                                    shootFunction:FireServer(TargetPlayer.Character)
                                else
                                    local mouseX, mouseY = getMousePosition()
                                    Forlorn.mouse1click(mouseX, mouseY)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

-- Keybind toggle
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == shared.Forbidden.TriggerBot.Settings.Keybind then
        isToggled = true
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == shared.Forbidden.TriggerBot.Settings.Keybind then
        isToggled = false
    end
end)

-- Triggerbot loop
RunService.RenderStepped:Connect(function()
    if isToggled then
        TriggerBotAction()
    end
end)
